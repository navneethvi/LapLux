<%- include("../partials/adminHeader") %>


<style>
    .error-message {
        color: red;
        margin-top: 5px;
        font-size: 14px; /* Adjust font size as needed */
    }
</style>





    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">

                        <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for (let i=0; i < brand.length; i++) { %>
                                        <option value="<%=brand[i].brandName %>">
                                            <%= brand[i].brandName %>
                                        </option>
                                        <% } %>
                                </select>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" name="description" class="form-control border"
                                    rows="4"></textarea>
                                <div id="description" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="text"
                                            class="form-control border">
                                            <div id="regularPrice-error" class="error-message"></div>

                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                        <div id="salePrice-error" class="error-message"></div>

                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Laptop Size</label>
                                        <input placeholder="$" name="size" type="text" class="form-control border">
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input placeholder="$" name="color" type="text" class="form-control border">
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label class="form-label">Processor</label>
                                        <input placeholder="" name="processor" type="text" class="form-control border">
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for (let i=0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i].name %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                    <% } %>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                </div>
                                <div class="card-body">
                                    <div class="input-upload">
                                        <img src="assets/imgs/theme/upload.svg" alt="">
                                        <input class="form-control border" name="images" id="imageInput" type="file"
                                            multiple>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <button class="btn btn-md rounded font-sm hover-up" type="button"
                                    onclick="validateAndSubmit()">Publish</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Add an empty container div for displaying image thumbnails -->
    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
            /* Adjust margin as needed for spacing between thumbnails */
        }
    </style>

    <script>
        // Array to store selected images
        const selectedImages = [];

        // Function to handle file input change
        document.getElementById("imageInput").addEventListener("change", handleFileSelect);

        function handleFileSelect(event) {
            // Target the container for displaying thumbnails
            const addedImagesContainer = document.getElementById("addedImagesContainer");

            // Clear previous content
            addedImagesContainer.innerHTML = "";

            const files = event.target.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];

                // Add the file to the selected images array
                selectedImages.push(file);

                // Create thumbnail element
                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");

                // Create image element
                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";

                // Set a fixed width for the image
                img.style.width = "50px"; // Adjust the width as needed
                img.style.height = "auto";

                // Create remove icon
                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;"; // Multiplication symbol as a cross

                // Event listener to remove the image on icon click
                removeIcon.addEventListener("click", function () {
                    // Remove the file from the selected images array
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }

                    // Remove the thumbnail from the container
                    thumbnail.remove();
                });

                // Append elements to thumbnail
                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);

                // Append thumbnail to the container
                addedImagesContainer.appendChild(thumbnail);
            }
        }


        function validateAndSubmit() {
            if (validateForm()) {
                // If validation passes, submit the form
                document.forms[0].submit(); // Assuming this is the first (and only) form on your page
            }
        }

        function validateForm() {
            // Reset previous error messages
            resetErrorMessages();

            var isValid = true;

            var productName = document.getElementById("product_name").value;
            var regularPrice = document.getElementsByName("regularPrice")[0].value;
            var salePrice = document.getElementsByName("salePrice")[0].value;
            var quantity = document.getElementsByName("quantity")[0].value;

            // Check if inputs are not empty
            if (productName === "") {
                displayErrorMessage("productName-error", "Product Name is required");
                isValid = false;
            }

            // Check if prices are positive numbers
            if (isNaN(regularPrice) || regularPrice <= 0) {
                displayErrorMessage("regularPrice-error", "Regular price must be a positive number");
                isValid = false;
            }

            if (isNaN(salePrice) || salePrice <= 0) {
                displayErrorMessage("salePrice-error", "Sale price must be a positive number");
                isValid = false;
            }

            // Check if sale price is less than regular price
            if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
                displayErrorMessage("salePrice-error", "Sale price must be less than Regular price");
                isValid = false;
            }

            // Check if quantity is a positive integer
            if (!/^[1-9]\d*$/.test(quantity)) {
                displayErrorMessage("quantity-error", "Quantity must be a positive integer");
                isValid = false;
            }

            // Additional checks can be added for other fields if needed

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function resetErrorMessages() {
            var errorElements = document.querySelectorAll(".error-message");
            errorElements.forEach(function (element) {
                element.innerText = "";
                element.style.display = "none";
            });
        }
    </script>

    <%- include("../partials/adminFooter") %>